/*
Vapor Test Suite
0750: Operator overload

- output
10
20
30
-10
200
0
10
*/

using Core;

class Value
{
	private int32 num;

	public (int32 num)
	{
		this.num = num;
	}

	public Print()
	{
		Console.WriteLine(Int32.ToString(num));
	}

	public static + (Value l, Value r) -> Value
	{
		return new Value(l.num + r.num);
	}

	public static - (Value l, Value r) -> Value
	{
		return new Value(l.num - r.num);
	}

	public static * (Value l, Value r) -> Value
	{
		return new Value(l.num * r.num);
	}

	public static / (Value l, Value r) -> Value
	{
		return new Value(l.num / r.num);
	}

	public static % (Value l, Value r) -> Value
	{
		return new Value(l.num % r.num);
	}
}

class Test
{
	public static Main()
	{
		Value v1 = new Value(10), v2 = new Value(20);
		v1.Print();
		v2.Print();
		(v1 + v2).Print();
		(v1 - v2).Print();
		(v1 * v2).Print();
		(v1 / v2).Print();
		(v1 % v2).Print();
	}
}
